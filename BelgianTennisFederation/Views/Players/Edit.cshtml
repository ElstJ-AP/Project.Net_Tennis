@model TennisDomain.Classes.Player

@{
    ViewBag.Title = "Edit player";
}

<h2>Edit player</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Player</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.PlayerNr, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.PlayerNr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PlayerNr, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JoinYear, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.JoinYear, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JoinYear, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HouseNr, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.HouseNr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HouseNr, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNr, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.PhoneNr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNr, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FederationNr, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.FederationNr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FederationNr, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Roles, "Roles", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <select name="roles_list" class="js-data-fetch_roles" multiple="multiple" style="width:100%;">
                        @foreach (var role in Model.Roles)
                        {
                            <option value="@role.Id" selected="selected">@role.Name</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group col-md-6">
                <label class="control-label col-md-offset-1 col-md-3">Teams/Divisions</label>
                <div class="col-md-8">
                    <table class="pure-table pure-table-bordered">
                        <thead>
                            <tr>
                                <th>
                                    Team
                                </th>
                                <th>
                                    Division
                                </th>
                                <th>

                                </th>
                            </tr>
                        </thead>

                        @foreach (var item in Model.PlayerTeamDivisions)
                        {
                            <tr>
                                <td>
                                    @item.Team.Name
                                </td>
                                <td>
                                    @item.Division.Name
                                </td>
                                <td>
                                    @Html.ActionLink("Delete", "DeleteTeamDivision", new { divisionId = item.DivisionId, playerId = Model.Id, teamId = item.TeamId }, null)
                                </td>
                            </tr>
                        }
                    </table>
                    @Html.ActionLink("Add", "AddTeamDivision", new { id = Model.Id })
                </div>
            </div>
        </div>
        <hr />
        <div class="row" style="margin-bottom:8px;">
            <label class="control-label col-md-1">Games</label>
            <div class="col-md-7">
                <table class="pure-table pure-table-bordered">
                    <thead>
                        <tr>
                            <th>
                                Player 1
                            </th>
                            <th>
                                Player 1 Score
                            </th>
                            <th>
                                Player 2 Score
                            </th>
                            <th>
                                Player 2
                            </th>
                            <th>

                            </th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.Player1Games)
                    {
                        <tr>
                            <td>
                                @item.Player1.NameNumber
                            </td>
                            <td>
                                @item.Player1Score
                            </td>
                            <td>
                                @item.Player2Score
                            </td>
                            <td>
                                @item.Player2.NameNumber
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", "Game", new { id = item.Id }, null) |
                                @Html.ActionLink("Delete", "Delete", "Game", new { id = item.Id }, null)
                            </td>
                        </tr>
                    }
                    @foreach (var item in Model.Player2Games)
                    {
                        <tr>
                            <td>
                                @item.Player1.NameNumber
                            </td>
                            <td>
                                @item.Player1Score
                            </td>
                            <td>
                                @item.Player2Score
                            </td>
                            <td>
                                @item.Player2.NameNumber
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", "Game", new { id = item.Id }, null) |
                                @Html.ActionLink("Delete", "Delete", "Game", new { id = item.Id }, null)
                            </td>
                        </tr>
                    }
                </table>
                @Html.ActionLink("Create New", "Create", "Game", null, null)
            </div>
        </div>
        <hr />
        <div class="row">
            <label class="control-label col-md-1">Fines</label>
            <div class="col-md-7">
                <table class="pure-table pure-table-bordered">
                    <thead>
                        <tr>
                            <th>
                                Date
                            </th>
                            <th>
                                Amount
                            </th>
                            <th>

                            </th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.Fines)
                    {
                        <tr>
                            <td>
                                @item.FineDate.ToShortDateString()
                            </td>
                            <td>
                                € @item.Amount
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "EditFine",new { fineId = item.Id, playerId = Model.Id }, null) |
                                @Html.ActionLink("Delete", "DeleteFine", new { fineId = item.Id, playerId = Model.Id }, null)
                            </td>
                        </tr>
                    }
                </table>
                @Html.ActionLink("Create New", "AddFine", new { playerId=Model.Id}, null)
            </div>
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
